@startuml

' AbstractControl 클래스 정의
class AbstractControl {
    +bool init(const int& currentMode, const int& displayType)
    +bool isInitComplete()
    +int controlTimer(const int& timerType, const bool& start, const int& interval)
    +int getTimerId(const int& timerType)
    +const QVariant getData(const int& type)
    +bool setData(const int& type, const QVariant& value, const bool& alwaysUpdate)
    +bool createSignal(const int& type, const QVariant& value, const bool& alwaysUpdate)
    +virtual void keyEvent(const int& inputType, const int& inputValue)
    +virtual void resizeEvent(const int& width, const int& height)
    +void timerEvent(QTimerEvent* event)
    -virtual AbstractHandler* isHandler()
    -virtual bool initControl()
    -virtual void controlConnect(const bool& state)
    -virtual void initCommonData(const int& currentMode, const int& displayType)
    -virtual void initNormalData()
    -virtual void initControlData()
    -virtual void resetControl(const bool& reset)
    -virtual void timerFunc(const int& timerId)
    -virtual void updateDataControl(const int& type, const QVariant& value)
    -virtual void updateDataHandler(const int& type, const QVariant& value, const bool& alwaysUpdate)
    -virtual void sendEventInfo(const int& destination, const int& eventType, const QVariant& eventValue)
    -virtual void slotControlUpdate(const int& type, const QVariant& value)
    -virtual void slotConfigChanged(const int& type, const QVariant& value)
    -virtual void slotEventInfoChanged(const int& displayType, const int& eventType, const QVariant& eventValue)
    -virtual void slotHandlerEvent(const int& type, const QVariant& value)
    -QMap<int, int> mTimer
    -QMap<int, QVariant> mData
    -bool mInit
}

' Control 클래스 정의
class Control {
    +void keyEvent(const int& inputType, const int& inputValue)
    +void resizeEvent(const int& width, const int& height)
    -AbstractHandler* isHandler()
    -bool initControl()
    -void controlConnect(const bool& state)
    -void initCommonData(const int& currentMode, const int& displayType)
    -void initNormalData()
    -void initControlData()
    -void resetControl(const bool& reset)
    -void timerFunc(const int& timerId)
    -void updateDataControl(const int& type, const QVariant& value)
    -void updateDataHandler(const int& type, const QVariant& value, const bool& alwaysUpdate)
    -void sendEventInfo(const int& destination, const int& eventType, const QVariant& eventValue)
    -void slotControlUpdate(const int& type, const QVariant& value)
    -void slotConfigChanged(const int& type, const QVariant& value)
    -void slotEventInfoChanged(const int& displayType, const int& eventType, const QVariant& eventValue)
    -void slotHandlerEvent(const int& type, const QVariant& value)
    -AbstractHandler* mHandler
}

' 클래스 간의 관계 정의
Control <- ControlManager : Create / Init
AbstractControl <|- Control : Inheritance
Control --> Popup : Draw Popup
Control --> ConfigSetting : Read / Write
Control --> Python : System Call
Hander <-- Control : Create / Init / Connect


@enduml
