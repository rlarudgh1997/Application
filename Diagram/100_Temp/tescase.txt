@startuml
actor User
participant ControlExcel
participant TestCase
participant ConfigSetting
participant ExcelUtil

participant ConvertDataManager
participant GenerateCaseData
participant GUI as Graphics
participant ControlManager






User -> ControlExcel : updateStartTestCase()
activate ControlExcel
ControlExcel -> TestCase : start(arguments)
deactivate ControlExcel

activate TestCase
TestCase -> TestCase : parsingOptions(arguments)
alt parsingOptions == true
    TestCase -> TestCase : drawTerminalMenu(HelpMode)
    TestCase --> ControlExcel : return false
else
    TestCase -> ConfigSetting : writeConfig(GenerateStart, true)

    alt USE_TEST_CASE_THREAD defined
        TestCase -> TestCase : controlThread(Resume)
    else
        loop excuteTestCase loop
            TestCase -> TestCase : excuteTestCase(excuteType)
            alt nextType == Completed or Failed
                TestCase -> TestCase : getExcuteType()
                TestCase -> TestCase : emit signalTestCaseCompleted()
                break
            else nextType == Exit
                TestCase -> ControlManager : emit signalExitProgram()
                break
            else
                TestCase -> TestCase : update excuteType
            end
        end
    end
end
deactivate TestCase
TestCase --> ControlExcel : return true













TestCase -> TestCase : runThread()
TestCase -> TestCase : openExcelFile()

activate TestCase
TestCase -> TestCase : getRemainingModules()
TestCase -> TestCase : getEditingModule()
TestCase -> TestCase : readModuleList()
TestCase -> TestCase : (조건) currentModule == newModule

alt currentModule == newModule
    TestCase -> ivis::common : APP_PWD()
    TestCase -> TestCase : readSheetData(false)

else currentModule == editingModule
    TestCase -> TestCase : readSheetData(true)
    TestCase -> TestCase : setEditingModule(QString())

else 기타 모듈
    loop moduleList.keys()
        TestCase -> TestCase : 비교 및 filePath 설정
    end
    TestCase -> ExcelUtil : openExcelFile(filePath)
end

TestCase -> TestCase : getSelectModules()
TestCase -> TestCase : getRemainingModules()

alt sheetDataList.size() > 0
    TestCase -> TestCase : writeSheetData(sheetDataList)
    TestCase -> TestCase : setRemainingModules()
    TestCase -> ConfigSetting : writeConfig(ConfigTypeTCFilePath, filePath)
end

deactivate TestCase
TestCase --> ControlExcel : return result



















activate TestCase
TestCase -> TestCase : excuteTestCase(excuteType)


TestCase -> ConfigSetting : readConfig(GraphicsMode)
note right: graphicsMode = true / false

TestCase -> TestCase : setExcuteType(excuteType)

alt excuteType == ExcuteTypeStart
    TestCase -> TestCase : nextType = ExcuteTypeParsingAppMode

else excuteType == ExcuteTypeParsingAppMode or ParsingModule
    TestCase -> TestCase : parsingInputArguments()
    alt success
        TestCase -> TestCase : nextType = ExcelOpen
    else
        TestCase -> ConfigSetting : readConfig(GraphicsMode)
        alt graphicsMode == true
            TestCase -> TestCase : nextType = Failed
        else
            TestCase -> TestCase : nextType = Exit
        end
    end

else excuteType == ExcuteTypeExcelOpen
    TestCase -> TestCase : openExcelFile()
    alt success
        TestCase -> TestCase : nextType = GenConvertData
    else
        TestCase -> ConfigSetting : readConfig(GraphicsMode)
        alt graphicsMode == true
            TestCase -> TestCase : nextType = Failed
        else
            TestCase -> TestCase : nextType = Exit
        end
    end

else excuteType == ExcuteTypeGenConvertData
    TestCase -> ConvertDataManager : excuteConvertDataManager()
    alt success
        TestCase -> TestCase : nextType = GenTC
    end

else excuteType == ExcuteTypeGenTC
    TestCase -> GenerateCaseData : excuteGenerateCaseData()
    TestCase -> TestCase : nextType = GenTCCompleted

else excuteType == ExcuteTypeGenTCComplted
    TestCase -> TestCase : getRemainingModules()
    alt remainingModules is empty
        TestCase -> TestCase : getAllModuleSelect()
        alt graphicsMode || allModules
            TestCase -> TestCase : nextType = Completed
        else
            TestCase -> TestCase : nextType = ParsingModule
        end
    else
        TestCase -> TestCase : nextType = ExcelOpen
    end

else excuteType == ExcuteTypeStop
    TestCase -> TestCase : updateTestCaseExcuteInfo(Stop)

else
    TestCase -> TestCase : nextType = Failed (default)
end

' 최종 업데이트
TestCase -> ConfigSetting : readConfig(GenerateStart)
alt GenerateStart == true
    TestCase -> TestCase : updateTestCaseExcuteInfo(nextType, text)

    alt !graphicsMode && allModuleSelected && nextType == Completed
        TestCase -> TestCase : nextType = Exit
    end
end

TestCase --> TestCase : return nextType
deactivate TestCase




















@enduml
