@startuml

' AbstractControl 클래스 정의
class AbstractControl {
    +virtual void keyEvent(const int& inputType, const int& inputValue)
    +virtual void resizeEvent(const int& width, const int& height)
    -virtual AbstractHandler* isHandler()
    -virtual bool initControl()
    -virtual void controlConnect(const bool& state)
    -virtual void initCommonData(const int& currentMode, const int& displayType)
    -virtual void initNormalData()
    -virtual void initControlData()
    -virtual void resetControl(const bool& reset)
    -virtual void timerFunc(const int& timerId)
    -virtual void updateDataControl(const int& type, const QVariant& value)
    -virtual void updateDataHandler(const int& type, const QVariant& value, const bool& alwaysUpdate)
    -virtual void sendEventInfo(const int& destination, const int& eventType, const QVariant& eventValue)
    -virtual void slotControlUpdate(const int& type, const QVariant& value)
    -virtual void slotConfigChanged(const int& type, const QVariant& value)
    -virtual void slotEventInfoChanged(const int& displayType, const int& eventType, const QVariant& eventValue)
    -virtual void slotHandlerEvent(const int& type, const QVariant& value)

    +bool init(const int& currentMode, const int& displayType)
    +bool isInitComplete()
    +int controlTimer(const int& timerType, const bool& start, const int& interval)
    +int getTimerId(const int& timerType)
    +const QVariant getData(const int& type)
    +bool setData(const int& type, const QVariant& value, const bool& alwaysUpdate)
    +bool createSignal(const int& type, const QVariant& value, const bool& alwaysUpdate)
    +void timerEvent(QTimerEvent* event)

    -QMap<int, int> mTimer
    -QMap<int, QVariant> mData
    -bool mInit
}

' ControlCenter 클래스 정의
class ControlCenter {
    +virtual void keyEvent(const int& inputType, const int& inputValue)
    +virtual void resizeEvent(const int& width, const int& height)
    -virtual AbstractHandler* isHandler()
    -virtual bool initControl()
    -virtual void controlConnect(const bool& state)
    -virtual void initCommonData(const int& currentMode, const int& displayType)
    -virtual void initNormalData()
    -virtual void initControlData()
    -virtual void resetControl(const bool& reset)
    -virtual void timerFunc(const int& timerId)
    -virtual void updateDataControl(const int& type, const QVariant& value)
    -virtual void updateDataHandler(const int& type, const QVariant& value, const bool& alwaysUpdate)
    -virtual void sendEventInfo(const int& destination, const int& eventType, const QVariant& eventValue)
    -virtual void slotControlUpdate(const int& type, const QVariant& value)
    -virtual void slotConfigChanged(const int& type, const QVariant& value)
    -virtual void slotEventInfoChanged(const int& displayType, const int& eventType, const QVariant& eventValue)
    -virtual void slotHandlerEvent(const int& type, const QVariant& value)

    -void updateConfigInfo()
    -void updateAllModuleList()
    -bool checkNodeAddress(const QString& vsmPath, const QVariantList& vsmFile)
    -int isVehicleType(const QString& file)
    -QStringList isNodeAddressAll(const QString& vsmPath, const QVariantList& vsmFile)
    -QStringList isNodeAddressMatchingModule(const QStringList& vsmList)
    -void updateNodeAddress(const bool& check)
    -void updateSelectModuleList(const bool& show)
    -void updateSelectModueNodeAddress(const bool& update, const QVariantList& selectModule)

    -AbstractHandler* mHandler
}


' 클래스 간의 관계 정의
AbstractControl <|- ControlCenter : inheritance
HandlerCenter <-- ControlCenter : create, init, connect
ControlCenter <--> ConfigSetting : read, write
ControlCenter <.. ControlManager : create, init
ControlCenter <--> Popup : draw popup

@enduml
